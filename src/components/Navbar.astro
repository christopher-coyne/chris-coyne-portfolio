---
import "../styles/GlobalStyles.css";
import "@fontsource/open-sans/700.css";
import { Icon } from "astro-icon/components";
---

<nav>
  <div class="topContainer">
    <div class="titleContainer">
      <a class="title" href="/"> Chris Coyne </a>
    </div>
    <div class="rightContainer">
      <button id="themeToggle" aria-label="toggle darkmode">
        <Icon name="mdi:white-balance-sunny" size={28} />
      </button>
      <button id="hamburgerMenu" aria-label="open menu">
        <Icon name="mdi:menu" size={28} class="hamburgerIcon"/>
      </button>
      <ul class="linkContainer">
        <li><a href="/">About</a></li>
        <li><a href="/art">Art</a></li>
        <li><a href="/blog">Blog</a></li>
      </ul>
    </div>
</div>
  <div id="bottomContainer">
    <ul id="bottomLinkContainer">
      <li><a href="/">About</a></li>
        <li><a href="/art">Art</a></li>
        <li><a href="/blog">Blog</a></li>
    </ul>
  </div>
</div>
  
</nav>

<script is:inline>
  let theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  document.documentElement.setAttribute("data-theme", theme);

  const handleToggleClick = () => {
    // Toggle dark mode state
    const newTheme = theme === "dark" ? "light" : "dark";

    // Update the theme
    document.documentElement.setAttribute("data-theme", newTheme);
    theme = newTheme;

    // Save the new theme in localStorage
    window.localStorage.setItem("theme", newTheme);
  };

  document
    .getElementById("themeToggle")
    .addEventListener("click", handleToggleClick);

  
  const modal = document.getElementById("bottomContainer");
  const modalToggle = document.getElementById("hamburgerMenu");

  const handleResize = () => {
    if (window.innerWidth > 1200) {
      modal.style.display = "none";
    }
  };

  modalToggle.addEventListener("click", () => {
    const modalStyle = getComputedStyle(modal).display;
    modal.style.display = modalStyle === "block" ? "none" : "block";
  });

  window.addEventListener("resize", handleResize);
  window.addEventListener("load", handleResize);
</script>

<style>

  nav {
    display: flex;
    flex-direction: column;
    gap: 16px;
    width: 50%;
    margin: 16px auto;
    border-radius: 24px;
    border-radius: 16px;
    border: 2px solid var(--border-color);
    padding: 8px 16px;
  }
  .topContainer {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  a {
    text-decoration: none;
    padding: 8px 16px;
    border-radius: 8px;
    color: var(--text-color);
  }
  a:hover {
    background-color: var(--primary-color-l1);
  }
  .linkContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 12px;
  }
  .titleContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 16px;
    font-weight: 700;
  }
  .rightContainer {
    display: flex;
    gap: 16px;
    flex-direction: row;
    align-items: center;
  }
  #themeToggle {
    color: var(--text-color);
    background-color: var(--background-color);
    padding: 0px 0px 2px 0px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0px;
    border: none;
  }
  #themeToggle:hover {
    color: var(--primary-color);
    cursor: pointer;
  }

  #hamburgerMenu:hover {
    color: var(--primary-color);
    cursor: pointer;
  }

  .hamburgerIcon {
    margin-top: 3px;
  }
  #modal {
    display: none;
  }
  #hamburgerMenu {
    display: none;
    padding: 0px;
    border: none;
  }
  #bottomContainer {
    display: none;
  }
  /* breakpoints */
@media (min-width: 1200px) {
  #bottomContainer {
    display: none;
  }
}
  @media (max-width: 1200px) {
  .linkContainer {
    display: none;
  }
  #hamburgerMenu {
    display: block;
    color: var(--text-color);
    background-color: var(--background-color);
  }
  #bottomLinkContainer {
      display: flex;
      flex-direction: column;
      gap: 16px;
  }
}
  @media (max-width: 1000px) {
    nav {
    color: red;
    width: 90%;
  }
  
}
</style>
