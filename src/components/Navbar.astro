---
import "../styles/GlobalStyles.css";
import "@fontsource/open-sans/700.css";
import { Icon } from "astro-icon/components";
---

<nav class="flex flex-row w-full py-4 mb-8">
  <div class="flex justify-between items-center m-auto max-w-[600px] w-[90%]">
    <div class="flex justify-between items-center">
      <a class="link link-primary link-hover font-semibold hover:text-primary" href="/"> Chris Coyne </a>
    </div>
    <div class="flex items-center gap-4">
      <button id="themeToggle" aria-label="toggle darkmode" class="btn btn-sm btn-outline btn-square">
        <Icon name="mdi:white-balance-sunny" size={16} />
      </button>
      <button id="hamburgerMenu" aria-label="open menu" class="btn md:hidden btn-sm btn-outline btn-square hidden">
        <Icon name="mdi:menu" size={20} class="hamburgerIcon"/>
      </button>
      <ul class="flex justify-between items-center gap-2 md:gap-4 text-sm md:text-base">
        <li><a href="/" class="link">About</a></li>
        <li><a href="/art" class="link ">Art</a></li>
        <li><a href="/blog" class="link ">Blog</a></li>
      </ul>
    </div>
</div>
  <div id="bottomContainer">
    <ul id="bottomLinkContainer">
      <li><a href="/" class="link link-primary">About</a></li>
        <li><a href="/art" class="link link-primary">Art</a></li>
        <li><a href="/blog" class="link link-primary">Blog</a></li>
    </ul>
  </div>
</nav>

<script is:inline>
  let theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  document.documentElement.setAttribute("data-theme", theme);

  const handleToggleClick = () => {
    // Toggle dark mode state
    const newTheme = theme === "dark" ? "light" : "dark";

    // Update the theme
    document.documentElement.setAttribute("data-theme", newTheme);
    theme = newTheme;

    // Save the new theme in localStorage
    window.localStorage.setItem("theme", newTheme);
  };

  document
    .getElementById("themeToggle")
    .addEventListener("click", handleToggleClick);

  
  const modal = document.getElementById("bottomContainer");
  const modalToggle = document.getElementById("hamburgerMenu");

  const handleResize = () => {
    if (window.innerWidth > 1200) {
      modal.style.display = "none";
    }
  };

  modalToggle.addEventListener("click", () => {
    const modalStyle = getComputedStyle(modal).display;
    modal.style.display = modalStyle === "block" ? "none" : "block";
  });

  window.addEventListener("resize", handleResize);
  window.addEventListener("load", handleResize);
</script>

<style>
  #bottomContainer {
    display: none;
  }
  /* breakpoints */
@media (min-width: 1200px) {
  #bottomContainer {
    display: none;
  }
}
  @media (max-width: 1200px) {
  .linkContainer {
    display: none;
  }
  #bottomLinkContainer {
      display: flex;
      flex-direction: column;
      gap: 16px;
  }
}
</style>
