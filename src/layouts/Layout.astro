---
interface Props {
  title: string;
}

const { title } = Astro.props;
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import "@fontsource/open-sans";
import Head from "../components/Head.astro";
import "@fontsource/open-sans/700.css";
import "@fontsource/open-sans";
import "@fontsource/poppins";
import "@fontsource/poppins/600.css";
import "@fontsource/poppins/700.css";
import "@fontsource/open-sans/400-italic.css";
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Chris Coyne's Personal Site" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <Head />
  </head>
  <body>
    <Navbar />
    <slot />
    <Footer />
  </body><script>
    function init() {
      console.log("running script!");
      let theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
      })();

      console.log("THEME ", theme);
      document.documentElement.setAttribute("data-theme", theme ?? "night");

      const handleToggleClick = () => {
        // Toggle dark mode state
        const newTheme = theme === "night" ? "winter" : "night";

        // Update the theme
        console.log("setting new theme ", newTheme);
        document.documentElement.setAttribute("data-theme", newTheme);
        theme = newTheme;

        // Save the new theme in localStorage
        window.localStorage.setItem("theme", newTheme);
      };

      const themeToggle = document.getElementById("themeToggle");
      if (themeToggle) {
        themeToggle.addEventListener("click", () => {
          console.log("CLICKING");
          handleToggleClick();
        });
      }

      /*
    const modal = document.getElementById("bottomContainer");
    const modalToggle = document.getElementById("hamburgerMenu");
  
    const handleResize = () => {
      if (window.innerWidth > 1200) {
        modal.style.display = "none";
      }
    };
  
    modalToggle.addEventListener("click", () => {
      const modalStyle = getComputedStyle(modal).display;
      modal.style.display = modalStyle === "block" ? "none" : "block";
    });
  
    window.addEventListener("resize", handleResize);
    window.addEventListener("load", handleResize);
    */
    }
    init();
    //ok...
    document.addEventListener("astro:after-swap", () => init());
  </script>
</html>
